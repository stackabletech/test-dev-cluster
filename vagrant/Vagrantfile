# -*- mode: ruby -*-
# vi: set ft=ruby :

K3S_BASE_BOX="generic/debian10"
AGENT_BASE_BOX="generic/debian10"
NODE_COUNT=1

Vagrant.configure("2") do |config|
  ###
  ### k3s
  ###
  config.vm.define "k3s" do |vm|
    vm.vm.hostname = "k3s"
    vm.vm.box = K3S_BASE_BOX
    vm.vm.network "private_network", ip: "192.168.33.10"
    
    vm.vm.provider "virtualbox" do |vb|
      vb.name = "k3s"
      vb.gui = false
      vb.memory = "512"
    end

    vm.vm.synced_folder "rancher", "/rancher", SharedFoldersEnableSymlinksCreate: false

    vm.vm.provision "shell", path: "provision/debian10/k3s.sh"

    vm.vm.network "forwarded_port", guest: 6443, host: 6443

  end

  ###
  ### Stackable agent
  ###
  (1..NODE_COUNT).each do |n|
    config.vm.define "node#{n}" do |vm|
      vm.vm.hostname = "node#{1}"
      vm.vm.box = AGENT_BASE_BOX
      
      vm.vm.provider "virtualbox" do |vb|
        vb.name = "node#{n}"
        vb.gui = false
        vb.memory = "1024"
      end

      vm.vm.synced_folder "rancher", "/rancher", SharedFoldersEnableSymlinksCreate: false
      vm.vm.synced_folder "provision", "/provision", SharedFoldersEnableSymlinksCreate: false

      vm.vm.provision "shell", path: "provision/debian10/common.sh"
      vm.vm.provision "shell", path: "provision/debian10/agent.sh"
      vm.vm.provision "shell", path: "provision/debian10/start-agent.sh", run: 'always'

      vm.vm.network "forwarded_port", guest: 7077, host: 7077, auto_correct: true
      vm.vm.network "forwarded_port", guest: 8001, host: 8001, auto_correct: true
      vm.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
      vm.vm.network "forwarded_port", guest: 8081, host: 8081, auto_correct: true
      vm.vm.network "forwarded_port", guest: 8428, host: 8428, auto_correct: true
      vm.vm.network "forwarded_port", guest: 9090, host: 9090, auto_correct: true
      vm.vm.network "forwarded_port", guest: 9404, host: 9404, auto_correct: true
      vm.vm.network "forwarded_port", guest: 10000, host: 10000, auto_correct: true
    end
  end
end
