# -*- mode: ruby -*-
# vi: set ft=ruby :

#
# Load configuration file generated by init.sh
# This contains variable definitions such as OPERATOR_SRC_DIR, OPERATOR_TESTS_SRC_DIR and so on,
# that cannot be easily defined in this file.
#
require_relative "./conf/#{ENV['CONTAINER_OS_NAME']}"

Vagrant.configure("2") do |config|

  ###
  ### k3s
  ###
  config.vm.define "k3s-#{CONTAINER_OS_NAME}" do |vm|
    ip = "192.168.33.#{10*(1+SUPPORTED_OS.index(CONTAINER_OS_NAME))}"
    vm.vm.box = AGENT_BASE_BOX
    vm.vm.hostname = "k3s-#{CONTAINER_OS_NAME}"
    vm.vm.network :private_network, ip: ip
    vm.vm.provision :hosts, :sync_hosts => true

    vm.vm.provider "virtualbox" do |vb|
      vb.name = "k3s-#{CONTAINER_OS_NAME}"
      vb.gui = false
      if COMPONENT == "agent" then
        vb.memory = 8192 ## MBs
        vb.cpus = 4
      else
        vb.memory = 1024
        vb.cpus = 2
      end
    end

    vm.vm.synced_folder "rancher", "/rancher", SharedFoldersEnableSymlinksCreate: false

    vm.vm.provision "shell", path: "provision/scripts/k3s.sh", args: [CONTAINER_OS_NAME, ip]

    if COMPONENT == "agent" then
        vm.vm.synced_folder "provision", "/provision", mount_options: ['ro'], SharedFoldersEnableSymlinksCreate: false
        vm.vm.synced_folder AGENT_SRC_DIR, "/#{COMPONENT}", SharedFoldersEnableSymlinksCreate: false
        vm.vm.synced_folder AGENT_TESTS_SRC_DIR, "/#{COMPONENT}-integration-tests", SharedFoldersEnableSymlinksCreate: false

        vm.vm.provision "shell", path: "provision/scripts/common.sh", args: [CONTAINER_OS_NAME]
        vm.vm.provision "shell", path: "provision/scripts/rust.sh", args: []
    end
  end


  if COMPONENT != "agent" then
    ###
    ### Stackable agent
    ###
    (1..NODE_COUNT).each do |n|
      config.vm.define "node#{n}-#{CONTAINER_OS_NAME}" do |vm|
        vm.vm.box = AGENT_BASE_BOX
        vm.vm.hostname = "node#{n}-#{CONTAINER_OS_NAME}" 
        vm.vm.network :private_network, ip: "192.168.33.#{n+10*(1+SUPPORTED_OS.index(CONTAINER_OS_NAME))}"
        vm.vm.provision :hosts, :sync_hosts => true

        vm.vm.provider "virtualbox" do |vb|
          vb.name = "node#{n}-#{CONTAINER_OS_NAME}"
          vb.gui = false
          vb.memory = "1024"
        end

        vm.vm.synced_folder "rancher", "/rancher", mount_options: ['ro'], SharedFoldersEnableSymlinksCreate: false
        vm.vm.synced_folder "provision", "/provision", mount_options: ['ro'], SharedFoldersEnableSymlinksCreate: false

        vm.vm.provision "shell", path: "provision/scripts/common.sh", args: [CONTAINER_OS_NAME]
        vm.vm.provision "shell", path: "provision/scripts/agent.sh", args: [CONTAINER_OS_NAME]
        vm.vm.provision "shell", path: "provision/scripts/start-agent.sh", args: [CONTAINER_OS_NAME, vm.vm.hostname, n] , run: 'always'

        vm.vm.network "forwarded_port", guest: 7077, host: 7077, auto_correct: true
        vm.vm.network "forwarded_port", guest: 8001, host: 8001, auto_correct: true
        vm.vm.network "forwarded_port", guest: 8080, host: 8080, auto_correct: true
        vm.vm.network "forwarded_port", guest: 8081, host: 8081, auto_correct: true
        vm.vm.network "forwarded_port", guest: 8428, host: 8428, auto_correct: true
        vm.vm.network "forwarded_port", guest: 9090, host: 9090, auto_correct: true
        vm.vm.network "forwarded_port", guest: 9404, host: 9404, auto_correct: true
        vm.vm.network "forwarded_port", guest: 10000, host: 10000, auto_correct: true
      end
    end

    ###
    ### Operator
    ###
    config.vm.define "operator-#{CONTAINER_OS_NAME}" do |vm|
      vm.vm.hostname = "operator-#{CONTAINER_OS_NAME}"
      vm.vm.box = OPERATOR_BASE_BOX
      vm.vm.network :private_network, ip: "192.168.33.#{9+10*(1+SUPPORTED_OS.index(CONTAINER_OS_NAME))}"

      vm.vm.provider "virtualbox" do |vb|
        vb.name = "operator-#{CONTAINER_OS_NAME}"
        vb.gui = false
        vb.memory = "1024"
      end

      vm.vm.synced_folder "rancher", "/rancher", mount_options: ['ro'], SharedFoldersEnableSymlinksCreate: false
      vm.vm.synced_folder "provision", "/provision", mount_options: ['ro'], SharedFoldersEnableSymlinksCreate: false
      vm.vm.synced_folder OPERATOR_SRC_DIR, "/#{COMPONENT}", SharedFoldersEnableSymlinksCreate: false
      vm.vm.synced_folder OPERATOR_TESTS_SRC_DIR, "/#{COMPONENT}-integration-tests", SharedFoldersEnableSymlinksCreate: false

      vm.vm.provision "shell", path: "provision/scripts/common.sh", args: [CONTAINER_OS_NAME]
      vm.vm.provision "shell", path: "provision/scripts/rust.sh"

      #
      # Install ZK for tools that require it.
      #
      if COMPONENT == "kafka-operator" || COMPONENT == "nifi-operator" then
        vm.vm.provision "shell", path: "provision/scripts/operator.sh", args: [CONTAINER_OS_NAME, "zookeeper-operator"]
      end
      #
      # Install trino requirements
      #
      if COMPONENT == "trino-operator" then
        vm.vm.provision "shell", path: "provision/scripts/operator.sh", args: [CONTAINER_OS_NAME, "monitoring-operator"]
        vm.vm.provision "shell", path: "provision/scripts/install-trino-cli.sh"
      end
     end
  end
end

